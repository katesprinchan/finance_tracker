import 'package:finance_tracker/routing.dart';
import 'package:flutter/material.dart';
import 'package:go_router/go_router.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:smooth_page_indicator/smooth_page_indicator.dart';

class OnboardingPage extends StatefulWidget {
  const OnboardingPage({super.key});

  @override
  State<OnboardingPage> createState() => _OnboardingPageState();
}

class _OnboardingPageState extends State<OnboardingPage> {
  final PageController _controller = PageController();
  bool isLastPage = false;

  final List<Map<String, String>> onboardingData = [
    {
      "title": "–§–∏–∫—Å–∏—Ä—É–π —Å–≤–æ–∏ —Ñ–∏–Ω–∞–Ω—Å—ã üí∏",
      "text":
          "–ó–∞–ø–∏—Å—ã–≤–∞–π –≤—Å–µ –¥–æ—Ö–æ–¥—ã –∏ —Ä–∞—Å—Ö–æ–¥—ã –≤ –ø–∞—Ä—É –∫–ª–∏–∫–æ–≤, —á—Ç–æ–±—ã –≤—Å–µ–≥–¥–∞ –∑–Ω–∞—Ç—å, –∫—É–¥–∞ —É—Ö–æ–¥—è—Ç –¥–µ–Ω—å–≥–∏."
    },
    {
      "title": "–†–∞—Å–ø—Ä–µ–¥–µ–ª—è–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º üóÇÔ∏è",
      "text":
          "–°–æ–∑–¥–∞–≤–∞–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —É–¥–æ–±–Ω–æ —Å–æ—Ä—Ç–∏—Ä—É–π —Ç—Ä–∞—Ç—ã ‚Äî –µ–¥–∞, —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç, —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ."
    },
    {
      "title": "–ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –∏ —É–ø—Ä–∞–≤–ª—è–π üìä",
      "text":
          "–°–º–æ—Ç—Ä–∏ –Ω–∞ –Ω–∞–≥–ª—è–¥–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏ –∏ –Ω–∞—Ö–æ–¥–∏, –≥–¥–µ –º–æ–∂–Ω–æ —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å, —á—Ç–æ–±—ã –¥–æ—Å—Ç–∏—á—å —Å–≤–æ–∏—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ü–µ–ª–µ–π."
    },
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SafeArea(
        child: Padding(
          padding: const EdgeInsets.all(16.0),
          child: Column(
            children: [
              Align(
                alignment: Alignment.topRight,
                child: TextButton(
                  onPressed: () async {
                    // –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

                    final prefs = await SharedPreferences.getInstance();
                    await prefs.setBool('onboarding_seen', true);
                    context.go(AppRouteList.categoriePage);
                  },
                  child: const Text("–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"),
                ),
              ),
              Expanded(
                child: PageView.builder(
                  controller: _controller,
                  itemCount: onboardingData.length,
                  onPageChanged: (index) {
                    setState(
                        () => isLastPage = index == onboardingData.length - 1);
                  },
                  itemBuilder: (context, index) {
                    return Column(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Text(
                          onboardingData[index]['title']!,
                          textAlign: TextAlign.center,
                          style: const TextStyle(
                            fontSize: 22,
                            fontWeight: FontWeight.bold,
                          ),
                        ),
                        const SizedBox(height: 16),
                        Text(
                          onboardingData[index]['text']!,
                          textAlign: TextAlign.center,
                          style: const TextStyle(fontSize: 16),
                        ),
                      ],
                    );
                  },
                ),
              ),
              SmoothPageIndicator(
                controller: _controller,
                count: onboardingData.length,
                effect: const WormEffect(
                  dotHeight: 10,
                  dotWidth: 10,
                  activeDotColor: Colors.blue,
                ),
              ),
              const SizedBox(height: 24),
              SizedBox(
                width: double.infinity,
                child: ElevatedButton(
                  onPressed: () async {
                    if (isLastPage) {
                      final prefs = await SharedPreferences.getInstance();
                      await prefs.setBool('onboarding_seen', true);

                      context.go(AppRouteList.categoriePage);
                    } else {
                      _controller.nextPage(
                        duration: const Duration(milliseconds: 300),
                        curve: Curves.easeInOut,
                      );
                    }
                  },
                  child: Text(isLastPage ? "–ù–∞—á–∞—Ç—å" : "–î–∞–ª–µ–µ"),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}
